[build-system]
requires = ["setuptools >= 47.1.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
addopts = "-ra"
cache_dir = "build/.pytest_cache"
testpaths = ["test"]
python_files = ["test_*.py"]
python_classes = ["*Tester"]
python_functions = ["*_test", "*_test_?", "*_test_??"]
markers = [
    "wip: work in progress"
]

[tool.coverage.html]
extra_css = "doc/coverage/_static/css/tc.css"
directory = "build/coverage"
title =  "Google Sheet to Notion"

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover"

    # Don't complain about missing debug-only code:
  , "def __repr__"
  ]

[tool.coverage.run]
branch = true

[tool.flakehell]
format = "grouped"
max_line_length = 140
show_source = true

[tool.flakehell.plugins]
flake8-2020 = ["+*"]
flake8-bugbear = ["+*"]
flake8-builtins = ["+*"]
flake8-comprehensions = ["+*"]
flake8-eradicate = ["+*"]
flake8-isort = ["+*"]
flake8-mutable = ["+*"]
flake8-pep3101 = ["+*"]
flake8-pytest-style = ["-*"]
flake8-quotes = ["+*"]
flake8-return = ["+*"]
flake8-rst-docstrings = ["+*"]
flake8-simplify = ["+*"]
flake8-use-fstring = ["+*"]
flake8-variables-names = ["+*"]
mccabe = ["+*"]
# -E121 continuation line under-indented for hanging indent
# -E123 closing bracket does not match indentation of opening bracket's line
# -E124 closing bracket does not match visual indentation
# -E126 continuation line over-indented for hanging indent
# -E127 continuation line over-indented for visual indent
# -E131 continuation line unaligned for hanging indent
# -E203 whitespace before ','
# -E265 block comment should start with '# '
# -W503 line break before binary operator
pycodestyle = ["+*", "-E121", "-E123", "-E124", "-E126", "-E127", "-E131", "-E203", "-E265", "-W503"]
pyflakes = ["+*", "-F405"]
# -E1136 Value 'Optional' is unsubscriptable (unsubscriptable-object)
# TODO Remove for new version of `pylint` > 2.6.2
pylint = ["+*", "-E1136"]

[tool.flakehell.exceptions."test/*.py"]
flake8-pytest-style = ["+*"]
flake8-use-fstring = ["+*", "-FS002"]
flake8-variables-names = ["+*", "-VNE001"]
# -C0103 Variable name "x" doesn't conform to snake_case naming style (invalid-name)
# -C0115 Missing class docstring (missing-class-docstring)
# -C0116 Missing function or method docstring (missing-function-docstring)
# -R0201 Method could be a function (no-self-use)
# -C0121 Comparison to True should be just 'expr' (singleton-comparison)
pylint = ["+*", "-C0103", "-C0115", "-C0116", "-C0121", "-R0201"]

[tool.pylint.BASIC]
const-naming-style = 'UPPER_CASE'

[tool.pylint.FORMAT]
max-line-length = 140

[tool.pylint.DESIGN]
max-args = 6
max-attributes = 9
max-branches = 15
max-locals = 20
max-statements = 80
min-public-methods = 0

[tool.pylint.LOGGING]
logging-format-style = 'new'

[tool.pylint.MISCELLANEOUS]
notes = []

[tool.isort]
multi_line_output = 3
use_parentheses = true
honor_noqa = true
import_heading_stdlib = "Standard imports"
import_heading_thirdparty = "Third party packages"
import_heading_firstparty = "Project specific imports"
import_heading_localfolder = "Local imports"

[tool.vulture]
min_confidence = 61
ignore_names = ["kwargs", "args"]
